#!/usr/bin/env sh

# color.sfmod
# Provides utilities for managing colors, including converting named colors
# to hexadecimal and decimal RGB representations.

MOD_NAME='Textlib-Color'
MOD_VERSION='1.0.0'
MOD_AUTHOR='admin@dtrh.net'
MOD_SUMMARY='This module provides functions for indexing and converting colors'

# Outputs module information (one piece of data per line for easier parsing)
MOD_INFO() {
    echo "$MOD_NAME"
    echo "$MOD_VERSION"
    echo "$MOD_AUTHOR"
    echo "$MOD_SUMMARY"
}

# Outputs the list of commands provided by this module
MOD_COMMANDS() {
    echo "log_color_warning c2hex c2dec"
}
###############################################################################
# Help messages for each function
###############################################################################

export log_color_warning_summary="Records warnings for invalid inputs"
log_color_warning_help="Usage: log_color_warning <message>
Logs warnings for invalid color inputs.
Example: log_color_warning 'Invalid color name'"

export c2hex_summary="Convert a named color to its hex color code"
c2hex_help="Usage: c2hex <color_name>
Converts a named color to its hexadecimal representation.
Example: c2hex 'red' # Outputs: #FF0000"

export c2dec_summary="Convert named color to its decimal color code"
c2dec_help="Usage: c2dec <color_name>
Converts a named color to its decimal RGB representation.
Example: c2dec 'red' # Outputs: 255 0 0"

###############################################################################
# Log a warning for invalid color inputs
###############################################################################
log_color_warning() {
  if [ "$1" = "--help" ]; then
    echo "$log_color_warning_help"
    return 0
  fi

  msg="$1"
  echo "WARNING: $msg" >&2
}

###############################################################################
# Convert a named color to its hexadecimal representation
###############################################################################
c2hex() {
  if [ "$1" = "--help" ]; then
    echo "$c2hex_help"
    return 0
  fi

  color="$1"
  if [ -z "$color" ]; then
    echo "#FFFFFF"  # Default to white
    return 1
  fi

  case "$color" in
    black)       echo "#000000" ;;
    red)         echo "#FF0000" ;;
    green)       echo "#00FF00" ;;
    yellow)      echo "#FFFF00" ;;
    blue)        echo "#0000FF" ;;
    magenta)     echo "#FF00FF" ;;
    cyan)        echo "#00FFFF" ;;
    white)       echo "#FFFFFF" ;;
    gray|grey)   echo "#808080" ;;
    lightgray)   echo "#D3D3D3" ;;
    brightred)   echo "#FF5555" ;;
    brightgreen) echo "#55FF55" ;;
    brightblue)  echo "#5555FF" ;;
    *)
      log_color_warning "Unrecognized color '$color'. Defaulting to white (#FFFFFF)."
      echo "#FFFFFF"
      return 1
      ;;
  esac
}

###############################################################################
# Convert a named color to its decimal RGB representation
###############################################################################
c2dec() {
  if [ "$1" = "--help" ]; then
    echo "$c2dec_help"
    return 0
  fi

  color="$1"
  if [ -z "$color" ]; then
    echo "255 255 255"  # Default to white
    return 1
  fi

  case "$color" in
    black)       echo "0 0 0" ;;
    red)         echo "255 0 0" ;;
    green)       echo "0 255 0" ;;
    yellow)      echo "255 255 0" ;;
    blue)        echo "0 0 255" ;;
    magenta)     echo "255 0 255" ;;
    cyan)        echo "0 255 255" ;;
    white)       echo "255 255 255" ;;
    gray|grey)   echo "128 128 128" ;;
    lightgray)   echo "211 211 211" ;;
    brightred)   echo "255 85 85" ;;
    brightgreen) echo "85 255 85" ;;
    brightblue)  echo "85 85 255" ;;
    *)
      log_color_warning "Unrecognized color '$color'. Defaulting to white (255 255 255)."
      echo "255 255 255"
      return 1
      ;;
  esac
}

